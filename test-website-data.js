const { createClient } = require('next-sanity');

const client = createClient({
  projectId: 'h8jbyz2f',
  dataset: 'production',
  useCdn: false,
  apiVersion: '2024-01-01',
});

// src/lib/sanity.ts„ÅÆÈñ¢Êï∞„Çí„ÉÜ„Çπ„Éà
async function getFeaturedPosts() {
  return client.fetch(`
    *[_type == "post" && featured == true && !draft] | order(publishedAt desc) [0...5] {
      _id,
      title,
      slug,
      excerpt,
      publishedAt,
      updatedAt,
      image {
        alt,
        asset
      },
      categories[] {
        title,
        slug,
        color
      },
      tags[] {
        title,
        slug
      },
      featured
    }
  `);
}

async function getProfile() {
  return client.fetch(`
    *[_type == "profile"][0] {
      _id,
      name,
      bio,
      catchphrase,
      profileImage {
        alt,
        asset
      },
      experience[] {
        company,
        position,
        period,
        description
      },
      skills,
      socialLinks {
        twitter,
        instagram,
        youtube,
        github,
        linkedin
      },
      contactEmail
    }
  `);
}

async function getCategories() {
  return client.fetch(`
    *[_type == "category"] | order(title asc) {
      _id,
      title,
      slug,
      description,
      color
    }
  `);
}

async function testWebsiteData() {
  try {
    console.log('üåê „Ç¶„Çß„Éñ„Çµ„Ç§„Éà„Éá„Éº„ÇøÊ©üËÉΩ„Çí„ÉÜ„Çπ„Éà‰∏≠...\n');
    
    console.log('‚úÖ Ê≥®ÁõÆË®ò‰∫ã„ÇíÂèñÂæó:');
    const featuredPosts = await getFeaturedPosts();
    console.log(`Ê≥®ÁõÆË®ò‰∫ãÊï∞: ${featuredPosts.length}`);
    featuredPosts.forEach((post, index) => {
      console.log(`  ${index + 1}. ${post.title} (featured: ${post.featured})`);
    });
    console.log('');
    
    console.log('‚úÖ „Éó„É≠„Éï„Ç£„Éº„É´ÊÉÖÂ†±„ÇíÂèñÂæó:');
    const profile = await getProfile();
    if (profile) {
      console.log(`ÂêçÂâç: ${profile.name}`);
      console.log(`„Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫: ${profile.catchphrase || '„Å™„Åó'}`);
      console.log(`„Éê„Ç§„Ç™: ${profile.bio || '„Å™„Åó'}`);
      console.log(`ÁµåÊ≠¥Êï∞: ${profile.experience ? profile.experience.length : 0}`);
      console.log(`„Çπ„Ç≠„É´Êï∞: ${profile.skills ? profile.skills.length : 0}`);
    } else {
      console.log('„Éó„É≠„Éï„Ç£„Éº„É´„Éá„Éº„Çø„Å™„Åó');
    }
    console.log('');
    
    console.log('‚úÖ „Ç´„ÉÜ„Ç¥„É™„Éº‰∏ÄË¶ß„ÇíÂèñÂæó:');
    const categories = await getCategories();
    console.log(`„Ç´„ÉÜ„Ç¥„É™„ÉºÊï∞: ${categories.length}`);
    categories.forEach((category, index) => {
      console.log(`  ${index + 1}. ${category.title} (${category.color})`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
    console.error('„Çπ„Çø„ÉÉ„ÇØ„Éà„É¨„Éº„Çπ:', error.stack);
  }
}

testWebsiteData();